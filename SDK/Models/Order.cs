using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace MercadoLibre.SDK.Models
{
    // <auto-generated />
    //
    // To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
    //
    //    using AuthorizationExceptionModels;
    //
    //    var order = Order.FromJson(jsonString);

    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Order
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public long Id { get; set; }

        [JsonProperty("date_created", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("date_closed", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset DateClosed { get; set; }

        [JsonProperty("last_updated", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset LastUpdated { get; set; }

        [JsonProperty("manufacturing_ending_date", NullValueHandling = NullValueHandling.Ignore)]
        public object ManufacturingEndingDate { get; set; }

        [JsonProperty("feedback", NullValueHandling = NullValueHandling.Ignore)]
        public Feedback Feedback { get; set; }

        [JsonProperty("mediations", NullValueHandling = NullValueHandling.Ignore)]
        public List<Mediation> Mediations { get; set; }

        [JsonProperty("comments", NullValueHandling = NullValueHandling.Ignore)]
        public object Comments { get; set; }

        [JsonProperty("pack_id", NullValueHandling = NullValueHandling.Ignore)]
        public object PackId { get; set; }

        [JsonProperty("pickup_id", NullValueHandling = NullValueHandling.Ignore)]
        public object PickupId { get; set; }

        [JsonProperty("order_request", NullValueHandling = NullValueHandling.Ignore)]
        public OrderRequest OrderRequest { get; set; }

        [JsonProperty("fulfilled", NullValueHandling = NullValueHandling.Ignore)]
        public bool Fulfilled { get; set; }

        [JsonProperty("total_amount", NullValueHandling = NullValueHandling.Ignore)]
        public long TotalAmount { get; set; }

        [JsonProperty("total_amount_with_shipping", NullValueHandling = NullValueHandling.Ignore)]
        public long TotalAmountWithShipping { get; set; }

        [JsonProperty("paid_amount", NullValueHandling = NullValueHandling.Ignore)]
        public long PaidAmount { get; set; }

        [JsonProperty("coupon", NullValueHandling = NullValueHandling.Ignore)]
        public Coupon Coupon { get; set; }

        [JsonProperty("expiration_date", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset ExpirationDate { get; set; }

        [JsonProperty("order_items", NullValueHandling = NullValueHandling.Ignore)]
        public List<OrderItem> OrderItems { get; set; }

        [JsonProperty("currency_id", NullValueHandling = NullValueHandling.Ignore)]
        public string CurrencyId { get; set; }

        [JsonProperty("payments", NullValueHandling = NullValueHandling.Ignore)]
        public List<Payment> Payments { get; set; }

        [JsonProperty("shipping", NullValueHandling = NullValueHandling.Ignore)]
        public Shipping Shipping { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("status_detail", NullValueHandling = NullValueHandling.Ignore)]
        public StatusDetail StatusDetail { get; set; }

        [JsonProperty("tags", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Tags { get; set; }

        [JsonProperty("buyer", NullValueHandling = NullValueHandling.Ignore)]
        public Buyer Buyer { get; set; }

        [JsonProperty("seller", NullValueHandling = NullValueHandling.Ignore)]
        public Seller Seller { get; set; }

        [JsonProperty("taxes", NullValueHandling = NullValueHandling.Ignore)]
        public Taxes Taxes { get; set; }
    }

    public partial class Buyer
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public long Id { get; set; }

        [JsonProperty("nickname", NullValueHandling = NullValueHandling.Ignore)]
        public string Nickname { get; set; }

        [JsonProperty("email", NullValueHandling = NullValueHandling.Ignore)]
        public string Email { get; set; }

        [JsonProperty("phone", NullValueHandling = NullValueHandling.Ignore)]
        public Phone Phone { get; set; }

        [JsonProperty("alternative_phone", NullValueHandling = NullValueHandling.Ignore)]
        public Phone AlternativePhone { get; set; }

        [JsonProperty("first_name", NullValueHandling = NullValueHandling.Ignore)]
        public string FirstName { get; set; }

        [JsonProperty("last_name", NullValueHandling = NullValueHandling.Ignore)]
        public string LastName { get; set; }

        [JsonProperty("billing_info", NullValueHandling = NullValueHandling.Ignore)]
        public BillingInfo BillingInfo { get; set; }
    }

    public partial class Phone
    {
        [JsonProperty("area_code", NullValueHandling = NullValueHandling.Ignore)]
        public string AreaCode { get; set; }

        [JsonProperty("extension", NullValueHandling = NullValueHandling.Ignore)]
        public string Extension { get; set; }

        [JsonProperty("number", NullValueHandling = NullValueHandling.Ignore)]
        public string Number { get; set; }

        [JsonProperty("verified", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Verified { get; set; }
    }

    public partial class BillingInfo
    {
        [JsonProperty("doc_type", NullValueHandling = NullValueHandling.Ignore)]
        public string DocType { get; set; }

        [JsonProperty("doc_number", NullValueHandling = NullValueHandling.Ignore)]
        public string DocNumber { get; set; }
    }

    public partial class Coupon
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public object Id { get; set; }

        [JsonProperty("amount", NullValueHandling = NullValueHandling.Ignore)]
        public long Amount { get; set; }
    }

    public partial class Feedback
    {
        [JsonProperty("sale", NullValueHandling = NullValueHandling.Ignore)]
        public object Sale { get; set; }

        [JsonProperty("purchase", NullValueHandling = NullValueHandling.Ignore)]
        public object Purchase { get; set; }
    }

    public partial class Mediation
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public long Id { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("date_created", NullValueHandling = NullValueHandling.Ignore)]
        public string DateCreated { get; set; }

        [JsonProperty("interactions", NullValueHandling = NullValueHandling.Ignore)]
        public Interactions Interactions { get; set; }
    }

    public partial class Interactions
    {
        [JsonProperty("current_responsible", NullValueHandling = NullValueHandling.Ignore)]
        public object CurrentResponsible { get; set; }
    }

    public partial class OrderItem
    {
        [JsonProperty("item", NullValueHandling = NullValueHandling.Ignore)]
        public Item Item { get; set; }

        [JsonProperty("quantity", NullValueHandling = NullValueHandling.Ignore)]
        public long Quantity { get; set; }

        [JsonProperty("unit_price", NullValueHandling = NullValueHandling.Ignore)]
        public long UnitPrice { get; set; }

        [JsonProperty("full_unit_price", NullValueHandling = NullValueHandling.Ignore)]
        public long FullUnitPrice { get; set; }

        [JsonProperty("currency_id", NullValueHandling = NullValueHandling.Ignore)]
        public string CurrencyId { get; set; }

        [JsonProperty("manufacturing_days", NullValueHandling = NullValueHandling.Ignore)]
        public object ManufacturingDays { get; set; }
    }

    public partial class Item
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("category_id", NullValueHandling = NullValueHandling.Ignore)]
        public string CategoryId { get; set; }

        [JsonProperty("variation_id", NullValueHandling = NullValueHandling.Ignore)]
        public long VariationId { get; set; }

        [JsonProperty("seller_custom_field", NullValueHandling = NullValueHandling.Ignore)]
        public object SellerCustomField { get; set; }

        [JsonProperty("variation_attributes", NullValueHandling = NullValueHandling.Ignore)]
        public List<VariationAttribute> VariationAttributes { get; set; }

        [JsonProperty("warranty", NullValueHandling = NullValueHandling.Ignore)]
        public string Warranty { get; set; }

        [JsonProperty("condition", NullValueHandling = NullValueHandling.Ignore)]
        public string Condition { get; set; }

        [JsonProperty("seller_sku", NullValueHandling = NullValueHandling.Ignore)]
        public object SellerSku { get; set; }
    }

    public partial class VariationAttribute
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("value_id", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long ValueId { get; set; }

        [JsonProperty("value_name", NullValueHandling = NullValueHandling.Ignore)]
        public string ValueName { get; set; }
    }

    public partial class OrderRequest
    {
        [JsonProperty("return", NullValueHandling = NullValueHandling.Ignore)]
        public object Return { get; set; }

        [JsonProperty("change", NullValueHandling = NullValueHandling.Ignore)]
        public object Change { get; set; }
    }

    public partial class Payment
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public long Id { get; set; }

        [JsonProperty("order_id", NullValueHandling = NullValueHandling.Ignore)]
        public long OrderId { get; set; }

        [JsonProperty("payer_id", NullValueHandling = NullValueHandling.Ignore)]
        public long PayerId { get; set; }

        [JsonProperty("collector", NullValueHandling = NullValueHandling.Ignore)]
        public Collector Collector { get; set; }

        [JsonProperty("card_id", NullValueHandling = NullValueHandling.Ignore)]
        public long? CardId { get; set; }

        [JsonProperty("site_id", NullValueHandling = NullValueHandling.Ignore)]
        public string SiteId { get; set; }

        [JsonProperty("reason", NullValueHandling = NullValueHandling.Ignore)]
        public string Reason { get; set; }

        [JsonProperty("payment_method_id", NullValueHandling = NullValueHandling.Ignore)]
        public string PaymentMethodId { get; set; }

        [JsonProperty("currency_id", NullValueHandling = NullValueHandling.Ignore)]
        public string CurrencyId { get; set; }

        [JsonProperty("installments", NullValueHandling = NullValueHandling.Ignore)]
        public long Installments { get; set; }

        [JsonProperty("issuer_id", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? IssuerId { get; set; }

        [JsonProperty("atm_transfer_reference", NullValueHandling = NullValueHandling.Ignore)]
        public AtmTransferReference AtmTransferReference { get; set; }

        [JsonProperty("coupon_id", NullValueHandling = NullValueHandling.Ignore)]
        public object CouponId { get; set; }

        [JsonProperty("activation_uri", NullValueHandling = NullValueHandling.Ignore)]
        public object ActivationUri { get; set; }

        [JsonProperty("operation_type", NullValueHandling = NullValueHandling.Ignore)]
        public string OperationType { get; set; }

        [JsonProperty("payment_type", NullValueHandling = NullValueHandling.Ignore)]
        public string PaymentType { get; set; }

        [JsonProperty("available_actions", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> AvailableActions { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("status_code", NullValueHandling = NullValueHandling.Ignore)]
        public object StatusCode { get; set; }

        [JsonProperty("status_detail", NullValueHandling = NullValueHandling.Ignore)]
        public string StatusDetail { get; set; }

        [JsonProperty("transaction_amount", NullValueHandling = NullValueHandling.Ignore)]
        public double TransactionAmount { get; set; }

        [JsonProperty("taxes_amount", NullValueHandling = NullValueHandling.Ignore)]
        public long TaxesAmount { get; set; }

        [JsonProperty("shipping_cost", NullValueHandling = NullValueHandling.Ignore)]
        public long ShippingCost { get; set; }

        [JsonProperty("coupon_amount", NullValueHandling = NullValueHandling.Ignore)]
        public long CouponAmount { get; set; }

        [JsonProperty("overpaid_amount", NullValueHandling = NullValueHandling.Ignore)]
        public long OverpaidAmount { get; set; }

        [JsonProperty("total_paid_amount", NullValueHandling = NullValueHandling.Ignore)]
        public double TotalPaidAmount { get; set; }

        [JsonProperty("installment_amount", NullValueHandling = NullValueHandling.Ignore)]
        public double? InstallmentAmount { get; set; }

        [JsonProperty("deferred_period", NullValueHandling = NullValueHandling.Ignore)]
        public object DeferredPeriod { get; set; }

        [JsonProperty("date_approved", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset DateApproved { get; set; }

        [JsonProperty("authorization_code", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AuthorizationCode { get; set; }

        [JsonProperty("transaction_order_id", NullValueHandling = NullValueHandling.Ignore)]
        public object TransactionOrderId { get; set; }

        [JsonProperty("date_created", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("date_last_modified", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset DateLastModified { get; set; }
    }

    public partial class AtmTransferReference
    {
        [JsonProperty("company_id", NullValueHandling = NullValueHandling.Ignore)]
        public object CompanyId { get; set; }

        [JsonProperty("transaction_id", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TransactionId { get; set; }
    }

    public partial class Collector
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public long Id { get; set; }
    }

    public partial class Seller
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public long Id { get; set; }

        [JsonProperty("nickname", NullValueHandling = NullValueHandling.Ignore)]
        public string Nickname { get; set; }

        [JsonProperty("email", NullValueHandling = NullValueHandling.Ignore)]
        public string Email { get; set; }

        [JsonProperty("phone", NullValueHandling = NullValueHandling.Ignore)]
        public Phone Phone { get; set; }

        [JsonProperty("alternative_phone", NullValueHandling = NullValueHandling.Ignore)]
        public Phone AlternativePhone { get; set; }

        [JsonProperty("first_name", NullValueHandling = NullValueHandling.Ignore)]
        public string FirstName { get; set; }

        [JsonProperty("last_name", NullValueHandling = NullValueHandling.Ignore)]
        public string LastName { get; set; }
    }

    public partial class Shipping
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public long Id { get; set; }

        [JsonProperty("site_id", NullValueHandling = NullValueHandling.Ignore)]
        public string SiteId { get; set; }

        [JsonProperty("shipment_type", NullValueHandling = NullValueHandling.Ignore)]
        public string ShipmentType { get; set; }

        [JsonProperty("mode", NullValueHandling = NullValueHandling.Ignore)]
        public string Mode { get; set; }

        [JsonProperty("shipping_mode", NullValueHandling = NullValueHandling.Ignore)]
        public string ShippingMode { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("substatus", NullValueHandling = NullValueHandling.Ignore)]
        public object Substatus { get; set; }

        [JsonProperty("date_created", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("receiver_address", NullValueHandling = NullValueHandling.Ignore)]
        public ErAddress ReceiverAddress { get; set; }

        [JsonProperty("sender_address", NullValueHandling = NullValueHandling.Ignore)]
        public ErAddress SenderAddress { get; set; }

        [JsonProperty("currency_id", NullValueHandling = NullValueHandling.Ignore)]
        public string CurrencyId { get; set; }

        [JsonProperty("date_first_printed", NullValueHandling = NullValueHandling.Ignore)]
        public object DateFirstPrinted { get; set; }

        [JsonProperty("service_id", NullValueHandling = NullValueHandling.Ignore)]
        public long ServiceId { get; set; }

        [JsonProperty("shipping_items", NullValueHandling = NullValueHandling.Ignore)]
        public List<ShippingItem> ShippingItems { get; set; }

        [JsonProperty("receiver_id", NullValueHandling = NullValueHandling.Ignore)]
        public long ReceiverId { get; set; }

        [JsonProperty("sender_id", NullValueHandling = NullValueHandling.Ignore)]
        public long SenderId { get; set; }

        [JsonProperty("shipping_option", NullValueHandling = NullValueHandling.Ignore)]
        public ShippingOption ShippingOption { get; set; }

        [JsonProperty("logistic_type", NullValueHandling = NullValueHandling.Ignore)]
        public string LogisticType { get; set; }

        [JsonProperty("picking_type", NullValueHandling = NullValueHandling.Ignore)]
        public object PickingType { get; set; }

        [JsonProperty("cost_components", NullValueHandling = NullValueHandling.Ignore)]
        public CostComponents CostComponents { get; set; }

        [JsonProperty("cost", NullValueHandling = NullValueHandling.Ignore)]
        public long Cost { get; set; }
    }

    public partial class CostComponents
    {
        [JsonProperty("special_discount", NullValueHandling = NullValueHandling.Ignore)]
        public long SpecialDiscount { get; set; }

        [JsonProperty("loyal_discount", NullValueHandling = NullValueHandling.Ignore)]
        public long LoyalDiscount { get; set; }

        [JsonProperty("compensation", NullValueHandling = NullValueHandling.Ignore)]
        public long Compensation { get; set; }

        [JsonProperty("gap_discount", NullValueHandling = NullValueHandling.Ignore)]
        public long GapDiscount { get; set; }

        [JsonProperty("ratio", NullValueHandling = NullValueHandling.Ignore)]
        public double Ratio { get; set; }
    }

    public partial class ErAddress
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public long Id { get; set; }

        [JsonProperty("address_line", NullValueHandling = NullValueHandling.Ignore)]
        public string AddressLine { get; set; }

        [JsonProperty("street_name", NullValueHandling = NullValueHandling.Ignore)]
        public string StreetName { get; set; }

        [JsonProperty("street_number", NullValueHandling = NullValueHandling.Ignore)]
        public string StreetNumber { get; set; }

        [JsonProperty("comment", NullValueHandling = NullValueHandling.Ignore)]
        public string Comment { get; set; }

        [JsonProperty("zip_code", NullValueHandling = NullValueHandling.Ignore)]
        public string ZipCode { get; set; }

        [JsonProperty("city", NullValueHandling = NullValueHandling.Ignore)]
        public City City { get; set; }

        [JsonProperty("state", NullValueHandling = NullValueHandling.Ignore)]
        public City State { get; set; }

        [JsonProperty("country", NullValueHandling = NullValueHandling.Ignore)]
        public City Country { get; set; }

        [JsonProperty("neighborhood", NullValueHandling = NullValueHandling.Ignore)]
        public City Neighborhood { get; set; }

        [JsonProperty("municipality", NullValueHandling = NullValueHandling.Ignore)]
        public City Municipality { get; set; }

        [JsonProperty("agency", NullValueHandling = NullValueHandling.Ignore)]
        public object Agency { get; set; }

        [JsonProperty("types", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Types { get; set; }

        [JsonProperty("latitude", NullValueHandling = NullValueHandling.Ignore)]
        public double Latitude { get; set; }

        [JsonProperty("longitude", NullValueHandling = NullValueHandling.Ignore)]
        public double Longitude { get; set; }

        [JsonProperty("geolocation_type", NullValueHandling = NullValueHandling.Ignore)]
        public string GeolocationType { get; set; }

        [JsonProperty("geolocation_last_updated", NullValueHandling = NullValueHandling.Ignore)]
        public object GeolocationLastUpdated { get; set; }

        [JsonProperty("geolocation_source", NullValueHandling = NullValueHandling.Ignore)]
        public object GeolocationSource { get; set; }

        [JsonProperty("delivery_preference", NullValueHandling = NullValueHandling.Ignore)]
        public string DeliveryPreference { get; set; }

        [JsonProperty("receiver_name", NullValueHandling = NullValueHandling.Ignore)]
        public string ReceiverName { get; set; }

        [JsonProperty("receiver_phone", NullValueHandling = NullValueHandling.Ignore)]
        public string ReceiverPhone { get; set; }
    }

    public partial class City
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }
    }

    public partial class ShippingItem
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("quantity", NullValueHandling = NullValueHandling.Ignore)]
        public long Quantity { get; set; }

        [JsonProperty("dimensions", NullValueHandling = NullValueHandling.Ignore)]
        public string Dimensions { get; set; }

        [JsonProperty("dimensions_source", NullValueHandling = NullValueHandling.Ignore)]
        public DimensionsSource DimensionsSource { get; set; }
    }

    public partial class DimensionsSource
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("origin", NullValueHandling = NullValueHandling.Ignore)]
        public string Origin { get; set; }
    }

    public partial class ShippingOption
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public long Id { get; set; }

        [JsonProperty("shipping_method_id", NullValueHandling = NullValueHandling.Ignore)]
        public long ShippingMethodId { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("currency_id", NullValueHandling = NullValueHandling.Ignore)]
        public string CurrencyId { get; set; }

        [JsonProperty("list_cost", NullValueHandling = NullValueHandling.Ignore)]
        public double ListCost { get; set; }

        [JsonProperty("cost", NullValueHandling = NullValueHandling.Ignore)]
        public long Cost { get; set; }

        [JsonProperty("delivery_type", NullValueHandling = NullValueHandling.Ignore)]
        public string DeliveryType { get; set; }

        [JsonProperty("estimated_schedule_limit", NullValueHandling = NullValueHandling.Ignore)]
        public EstimatedLimit EstimatedScheduleLimit { get; set; }

        [JsonProperty("estimated_delivery_time", NullValueHandling = NullValueHandling.Ignore)]
        public EstimatedDeliveryTime EstimatedDeliveryTime { get; set; }

        [JsonProperty("estimated_delivery_limit", NullValueHandling = NullValueHandling.Ignore)]
        public EstimatedDelivery EstimatedDeliveryLimit { get; set; }

        [JsonProperty("estimated_delivery_final", NullValueHandling = NullValueHandling.Ignore)]
        public EstimatedDelivery EstimatedDeliveryFinal { get; set; }

        [JsonProperty("estimated_delivery_extended", NullValueHandling = NullValueHandling.Ignore)]
        public EstimatedDelivery EstimatedDeliveryExtended { get; set; }

        [JsonProperty("estimated_handling_limit", NullValueHandling = NullValueHandling.Ignore)]
        public EstimatedLimit EstimatedHandlingLimit { get; set; }
    }

    public partial class EstimatedDelivery
    {
        [JsonProperty("date", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset Date { get; set; }

        [JsonProperty("offset", NullValueHandling = NullValueHandling.Ignore)]
        public long Offset { get; set; }
    }

    public partial class EstimatedDeliveryTime
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("date", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset Date { get; set; }

        [JsonProperty("unit", NullValueHandling = NullValueHandling.Ignore)]
        public string Unit { get; set; }

        [JsonProperty("offset", NullValueHandling = NullValueHandling.Ignore)]
        public Offset Offset { get; set; }

        [JsonProperty("time_frame", NullValueHandling = NullValueHandling.Ignore)]
        public TimeFrame TimeFrame { get; set; }

        [JsonProperty("pay_before", NullValueHandling = NullValueHandling.Ignore)]
        public object PayBefore { get; set; }

        [JsonProperty("shipping", NullValueHandling = NullValueHandling.Ignore)]
        public long Shipping { get; set; }

        [JsonProperty("handling", NullValueHandling = NullValueHandling.Ignore)]
        public long Handling { get; set; }

        [JsonProperty("schedule", NullValueHandling = NullValueHandling.Ignore)]
        public object Schedule { get; set; }
    }

    public partial class Offset
    {
        [JsonProperty("date", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset Date { get; set; }

        [JsonProperty("shipping", NullValueHandling = NullValueHandling.Ignore)]
        public long Shipping { get; set; }
    }

    public partial class TimeFrame
    {
        [JsonProperty("from", NullValueHandling = NullValueHandling.Ignore)]
        public object From { get; set; }

        [JsonProperty("to", NullValueHandling = NullValueHandling.Ignore)]
        public object To { get; set; }
    }

    public partial class EstimatedLimit
    {
        [JsonProperty("date", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Date { get; set; }
    }

    public partial class StatusDetail
    {
        [JsonProperty("code", NullValueHandling = NullValueHandling.Ignore)]
        public string Code { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }
    }

    public partial class Taxes
    {
        [JsonProperty("amount", NullValueHandling = NullValueHandling.Ignore)]
        public object Amount { get; set; }

        [JsonProperty("currency_id", NullValueHandling = NullValueHandling.Ignore)]
        public object CurrencyId { get; set; }
    }

    public partial class Order
    {
        public static Order FromJson(string json) => JsonConvert.DeserializeObject<Order>(json, Models.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Order self) => JsonConvert.SerializeObject(self, Models.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
        {
            new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
        },
        };
    }

    internal class ParseStringConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(long) || t == typeof(long?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            long l;
            if (Int64.TryParse(value, out l))
            {
                return l;
            }
            throw new Exception("Cannot unmarshal type long");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (long)untypedValue;
            serializer.Serialize(writer, value.ToString());
            return;
        }

        public static readonly ParseStringConverter Singleton = new ParseStringConverter();
    }
}
