/* 
 * MELI Markeplace SDK
 *
 * This is a the codebase to generate a SDK for Open Platform Marketplace
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using MeliLibTools.Client;
using MeliLibTools.MeliLibApi;

namespace MeliLibTools.Test
{
    /// <summary>
    ///  Class for testing ItemsHealthApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ItemsHealthApiTests : IDisposable
    {
        private ItemsHealthApi instance;

        public ItemsHealthApiTests()
        {
            instance = new ItemsHealthApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ItemsHealthApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ItemsHealthApi
            //Assert.IsType(typeof(ItemsHealthApi), instance, "instance is a ItemsHealthApi");
        }

        
        /// <summary>
        /// Test ItemsIdHealthActionsGet
        /// </summary>
        [Fact]
        public void ItemsIdHealthActionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string accessToken = null;
            //instance.ItemsIdHealthActionsGet(id, accessToken);
            
        }
        
        /// <summary>
        /// Test ItemsIdHealthGet
        /// </summary>
        [Fact]
        public void ItemsIdHealthGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string accessToken = null;
            //instance.ItemsIdHealthGet(id, accessToken);
            
        }
        
        /// <summary>
        /// Test SitesSiteIdHealthLevelsGet
        /// </summary>
        [Fact]
        public void SitesSiteIdHealthLevelsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string siteId = null;
            //instance.SitesSiteIdHealthLevelsGet(siteId);
            
        }
        
    }

}
