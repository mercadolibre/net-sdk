/* 
 * MELI Markeplace SDK
 *
 * This is a the codebase to generate a SDK for Open Platform Marketplace
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MeliLibTools.MeliLibApi;
using MeliLibTools.Model;
using MeliLibTools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MeliLibTools.Test
{
    /// <summary>
    ///  Class for testing Attributes
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AttributesTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Attributes
        //private Attributes instance;

        public AttributesTests()
        {
            // TODO uncomment below to create an instance of Attributes
            //instance = new Attributes();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Attributes
        /// </summary>
        [Fact]
        public void AttributesInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Attributes
            //Assert.IsInstanceOfType<Attributes> (instance, "variable 'instance' is a Attributes");
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'ValueId'
        /// </summary>
        [Fact]
        public void ValueIdTest()
        {
            // TODO unit test for the property 'ValueId'
        }
        /// <summary>
        /// Test the property 'ValueName'
        /// </summary>
        [Fact]
        public void ValueNameTest()
        {
            // TODO unit test for the property 'ValueName'
        }
        /// <summary>
        /// Test the property 'ValueStruct'
        /// </summary>
        [Fact]
        public void ValueStructTest()
        {
            // TODO unit test for the property 'ValueStruct'
        }
        /// <summary>
        /// Test the property 'Values'
        /// </summary>
        [Fact]
        public void ValuesTest()
        {
            // TODO unit test for the property 'Values'
        }
        /// <summary>
        /// Test the property 'AttributeGroupId'
        /// </summary>
        [Fact]
        public void AttributeGroupIdTest()
        {
            // TODO unit test for the property 'AttributeGroupId'
        }
        /// <summary>
        /// Test the property 'AttributeGroupName'
        /// </summary>
        [Fact]
        public void AttributeGroupNameTest()
        {
            // TODO unit test for the property 'AttributeGroupName'
        }

    }

}
